---
stages:
  - init
  - gen
  - test
  - verify
  - finish

init:
  stage: init
  interruptible: true
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh start

cache-init:
  # pull configs from s3 and update the gitlab cache for the rest of the
  # pipeline
  stage: init
  image: alpine:latest
  variables:
    PYTHONUNBUFFERED: 1
  script:
    - apk add -U python3 s3cmd
    - ls -la
    - mkdir -p .cache/osbuild-images/builds
    - find .cache/osbuild-images/builds -type f | wc -l
    - du -hs .cache/osbuild-images/builds
    - ./test/scripts/dl-build-info .cache/osbuild-images/builds/
    - find .cache/osbuild-images/builds -type f | wc -l
    - du -hs .cache/osbuild-images/builds
  cache:
    key: buildinfo
    paths:
      - .cache/osbuild-images/builds
    policy: pull-push

configure-generators:
  stage: gen
  image: alpine:latest
  variables:
    PYTHONUNBUFFERED: 1
  script:
    - apk add -U go python3 gpgme-dev
    - ./test/scripts/configure-generators generator-config.yml
  artifacts:
    paths:
      - generator-config.yml

generator-trigger:
  stage: test
  trigger:
    include:
      - artifact: generator-config.yml
        job: configure-generators
    strategy: depend

check-build-coverage:
  stage: verify
  image: alpine:latest
  variables:
    PYTHONUNBUFFERED: 1
  script:
    - apk add -U go python3 gpgme-dev s3cmd
    - ./test/scripts/dl-build-info .cache/osbuild-images/builds/
    - ./test/scripts/check-build-coverage .cache/osbuild-images/builds/
  cache:
    key: buildinfo
    paths:
      - .cache/osbuild-images/builds
    policy: pull-push

finish:
  stage: finish
  dependencies: []
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh finish
