---
name: "[integration]"

on:  # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - "*"

jobs:
  unit-tests:
    id: unit-tests
    name: "ğŸ›ƒ osbuild-composer unit tests"
    runs-on: ubuntu-20.04
    container:
      image: registry.fedoraproject.org/fedora:latest

    # Map step output to job output
    outputs:
      result: ${{ steps.tests.outputs.result }}

    steps:
      # krb5-devel is needed to test internal/upload/koji package
      # gcc is needed to build the mock depsolver binary for the unit tests
      # gpgme-devel is needed for container upload dependencies
      - name: Install build and test dependencies
        run: dnf -y install krb5-devel gcc git-core go gpgme-devel osbuild-depsolve-dnf btrfs-progs-devel device-mapper-devel

      - name: Check out osbuild-composer main branch
        uses: actions/checkout@v4
        with:
          path: osbuild-composer
          repository: osbuild/osbuild-composer
          ref: main

      - name: Check out the osbuild/images code
        uses: actions/checkout@v4
        with:
          path: images
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Update the osbuild/images reference
        run: |
          cd osbuild-composer
          go mod edit -replace github.com/osbuild/images=../images
          ./tools/prepare-source.sh

      - name: Mark the working directory as safe for git
        run: git config --global --add safe.directory "$(pwd)"

      - name: Run unit tests
        id: tests
        working-directory: osbuild-composer
        run: |
          if go test -v -race ./...; then
            echo result="success" >> "$GITHUB_OUTPUT"
          else
            echo result="failure" >> "$GITHUB_OUTPUT"
          fi


  upload:
    # Based on https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#using-data-from-the-triggering-workflow
    runs-on: ubuntu-latest
    needs:
      - unit-tests
    steps:
      - name: Save PR number
        env:
          pr_number: ${{ github.event.number }}
        run: |
          mkdir -p ./results
          echo "$pr_number"
          echo "$pr_number" > ./results/pr

      - name: Save test and lint results
        env:
          test_result: ${{needs.tests.outputs.result}}
        run: |
          mkdir -p ./results
          echo "$test_result" > ./results/test

      - uses: actions/upload-artifact@v4
        with:
          name: results
          path: results/
